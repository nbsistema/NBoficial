import{H as p,n as g,A as v,P as _,S as T,F as m,R as O}from"./vendor-Co-JSVqX.js";const w="2.55.0";let d="";typeof Deno<"u"?d="deno":typeof document<"u"?d="web":typeof navigator<"u"&&navigator.product==="ReactNative"?d="react-native":d="node";const A={"X-Client-Info":`supabase-js-${d}/${w}`},y={headers:A},U={schema:"public"},S={autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0,flowType:"implicit"},E={};var k=function(a,e,t,s){function l(r){return r instanceof t?r:new t(function(o){o(r)})}return new(t||(t=Promise))(function(r,o){function h(n){try{c(s.next(n))}catch(i){o(i)}}function u(n){try{c(s.throw(n))}catch(i){o(i)}}function c(n){n.done?r(n.value):l(n.value).then(h,u)}c((s=s.apply(a,e||[])).next())})};const j=a=>{let e;return a?e=a:typeof fetch>"u"?e=g:e=fetch,(...t)=>e(...t)},C=()=>typeof Headers>"u"?p:Headers,L=(a,e,t)=>{const s=j(t),l=C();return(r,o)=>k(void 0,void 0,void 0,function*(){var h;const u=(h=yield e())!==null&&h!==void 0?h:a;let c=new l(o==null?void 0:o.headers);return c.has("apikey")||c.set("apikey",a),c.has("Authorization")||c.set("Authorization",`Bearer ${u}`),s(r,Object.assign(Object.assign({},o),{headers:c}))})};var D=function(a,e,t,s){function l(r){return r instanceof t?r:new t(function(o){o(r)})}return new(t||(t=Promise))(function(r,o){function h(n){try{c(s.next(n))}catch(i){o(i)}}function u(n){try{c(s.throw(n))}catch(i){o(i)}}function c(n){n.done?r(n.value):l(n.value).then(h,u)}c((s=s.apply(a,e||[])).next())})};function F(a){return a.endsWith("/")?a:a+"/"}function R(a,e){var t,s;const{db:l,auth:r,realtime:o,global:h}=a,{db:u,auth:c,realtime:n,global:i}=e,f={db:Object.assign(Object.assign({},u),l),auth:Object.assign(Object.assign({},c),r),realtime:Object.assign(Object.assign({},n),o),storage:{},global:Object.assign(Object.assign(Object.assign({},i),h),{headers:Object.assign(Object.assign({},(t=i==null?void 0:i.headers)!==null&&t!==void 0?t:{}),(s=h==null?void 0:h.headers)!==null&&s!==void 0?s:{})}),accessToken:()=>D(this,void 0,void 0,function*(){return""})};return a.accessToken?f.accessToken=a.accessToken:delete f.accessToken,f}class I extends v{constructor(e){super(e)}}var N=function(a,e,t,s){function l(r){return r instanceof t?r:new t(function(o){o(r)})}return new(t||(t=Promise))(function(r,o){function h(n){try{c(s.next(n))}catch(i){o(i)}}function u(n){try{c(s.throw(n))}catch(i){o(i)}}function c(n){n.done?r(n.value):l(n.value).then(h,u)}c((s=s.apply(a,e||[])).next())})};class H{constructor(e,t,s){var l,r,o;if(this.supabaseUrl=e,this.supabaseKey=t,!e)throw new Error("supabaseUrl is required.");if(!t)throw new Error("supabaseKey is required.");const h=F(e),u=new URL(h);this.realtimeUrl=new URL("realtime/v1",u),this.realtimeUrl.protocol=this.realtimeUrl.protocol.replace("http","ws"),this.authUrl=new URL("auth/v1",u),this.storageUrl=new URL("storage/v1",u),this.functionsUrl=new URL("functions/v1",u);const c=`sb-${u.hostname.split(".")[0]}-auth-token`,n={db:U,realtime:E,auth:Object.assign(Object.assign({},S),{storageKey:c}),global:y},i=R(s??{},n);this.storageKey=(l=i.auth.storageKey)!==null&&l!==void 0?l:"",this.headers=(r=i.global.headers)!==null&&r!==void 0?r:{},i.accessToken?(this.accessToken=i.accessToken,this.auth=new Proxy({},{get:(f,b)=>{throw new Error(`@supabase/supabase-js: Supabase Client is configured with the accessToken option, accessing supabase.auth.${String(b)} is not possible`)}})):this.auth=this._initSupabaseAuthClient((o=i.auth)!==null&&o!==void 0?o:{},this.headers,i.global.fetch),this.fetch=L(t,this._getAccessToken.bind(this),i.global.fetch),this.realtime=this._initRealtimeClient(Object.assign({headers:this.headers,accessToken:this._getAccessToken.bind(this)},i.realtime)),this.rest=new _(new URL("rest/v1",u).href,{headers:this.headers,schema:i.db.schema,fetch:this.fetch}),this.storage=new T(this.storageUrl.href,this.headers,this.fetch,s==null?void 0:s.storage),i.accessToken||this._listenForAuthEvents()}get functions(){return new m(this.functionsUrl.href,{headers:this.headers,customFetch:this.fetch})}from(e){return this.rest.from(e)}schema(e){return this.rest.schema(e)}rpc(e,t={},s={}){return this.rest.rpc(e,t,s)}channel(e,t={config:{}}){return this.realtime.channel(e,t)}getChannels(){return this.realtime.getChannels()}removeChannel(e){return this.realtime.removeChannel(e)}removeAllChannels(){return this.realtime.removeAllChannels()}_getAccessToken(){var e,t;return N(this,void 0,void 0,function*(){if(this.accessToken)return yield this.accessToken();const{data:s}=yield this.auth.getSession();return(t=(e=s.session)===null||e===void 0?void 0:e.access_token)!==null&&t!==void 0?t:this.supabaseKey})}_initSupabaseAuthClient({autoRefreshToken:e,persistSession:t,detectSessionInUrl:s,storage:l,storageKey:r,flowType:o,lock:h,debug:u},c,n){const i={Authorization:`Bearer ${this.supabaseKey}`,apikey:`${this.supabaseKey}`};return new I({url:this.authUrl.href,headers:Object.assign(Object.assign({},i),c),storageKey:r,autoRefreshToken:e,persistSession:t,detectSessionInUrl:s,storage:l,flowType:o,lock:h,debug:u,fetch:n,hasCustomAuthorizationHeader:"Authorization"in this.headers})}_initRealtimeClient(e){return new O(this.realtimeUrl.href,Object.assign(Object.assign({},e),{params:Object.assign({apikey:this.supabaseKey},e==null?void 0:e.params)}))}_listenForAuthEvents(){return this.auth.onAuthStateChange((t,s)=>{this._handleTokenChanged(t,"CLIENT",s==null?void 0:s.access_token)})}_handleTokenChanged(e,t,s){(e==="TOKEN_REFRESHED"||e==="SIGNED_IN")&&this.changedAccessToken!==s?this.changedAccessToken=s:e==="SIGNED_OUT"&&(this.realtime.setAuth(),t=="STORAGE"&&this.auth.signOut(),this.changedAccessToken=void 0)}}const K=(a,e,t)=>new H(a,e,t);function $(){if(typeof window<"u"||typeof process>"u")return!1;const a=process.version;if(a==null)return!1;const e=a.match(/^v(\d+)\./);return e?parseInt(e[1],10)<=18:!1}$()&&console.warn("⚠️  Node.js 18 and below are deprecated and will no longer be supported in future versions of @supabase/supabase-js. Please upgrade to Node.js 20 or later. For more information, visit: https://github.com/orgs/supabase/discussions/37217");export{K as c};
